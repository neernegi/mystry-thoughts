import mongoose, { Document, Schema, Types } from "mongoose";

// EXPLANATION: Interface for nested replies
// This defines the TypeScript structure for reply objects
export interface IReply {
  _id?: Types.ObjectId; // Optional MongoDB ObjectId (auto-generated)
  user: Types.ObjectId; // Reference to User who made the reply
  reply: string; // The actual reply text content
  replyOfreplies?: IReply[]; // Nested replies (replies to this reply)
  createdAt?: Date; // When reply was created (auto-generated by timestamps)
  updatedAt?: Date; // When reply was last updated (auto-generated)
}

// EXPLANATION: Main Thought interface
// This defines the TypeScript structure for thought documents
export interface IThought extends Document {
  user: Types.ObjectId; // Reference to User who created the thought
  thought: string; // The actual thought text content
  image: string[]; // Array of image URLs
  thoughtReplies: IReply[]; // Array of replies to this thought

  createdAt: Date; // When thought was created
  updatedAt: Date; // When thought was last updated
}

// EXPLANATION: Reply Schema Definition
// This tells MongoDB how to structure reply subdocuments
const ReplySchema: Schema<IReply> = new Schema(
  {
    // user field: Must be ObjectId, references User collection, required
    user: { type: Schema.Types.ObjectId, ref: "User", required: true },

    // reply field: Must be string, required
    reply: { type: String, required: true },

    // replyOfreplies: Array of nested replies using Mixed type for self-reference
    // Mixed type allows any structure, default empty array
    replyOfreplies: {
      type: [Schema.Types.Mixed],
      default: [],
    },
  },
  {
    // timestamps: true automatically adds createdAt and updatedAt fields
    timestamps: true,
  }
);

// EXPLANATION: Thought Schema Definition
// This tells MongoDB how to structure thought documents
const ThoughtSchema: Schema<IThought> = new Schema(
  {
    // user field: References User collection, required
    user: { type: Schema.Types.ObjectId, ref: "User", required: true },

    // thought field: Text content, required
    thought: { type: String, required: true },

    // image field: Array of strings (URLs), each element must be string
    image: [{ type: String }],

    // thoughtReplies field: Array of reply subdocuments using ReplySchema
    thoughtReplies: [ReplySchema],
  },
  {
    // Auto-generate createdAt and updatedAt timestamps
    timestamps: true,
  }
);

// EXPLANATION: Model Export
// Check if model already exists (prevents re-compilation errors in Next.js)
// If exists, use existing model, otherwise create new one
const ThoughtModel =
  mongoose.models.Thought || mongoose.model<IThought>("Thought", ThoughtSchema);

export default ThoughtModel;
