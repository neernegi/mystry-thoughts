name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_ENV: test
  NEXT_PUBLIC_SOCKET_URL: http://localhost:3001
  HOSTNAME: "localhost"
  PORT: 3000
  SOCKET_PORT: 3001

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      CLOUD_NAME: ${{ secrets.CLOUD_NAME }}
      CLOUD_API_KEY: ${{ secrets.CLOUD_API_KEY }}
    
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type checking
        run: npm run type-check
                
      - name: Start Socket.io server
        run: npm run dev:socket &
        env:
          PORT: 3001
        
      - name: Run tests
        run: npm test
        
      - name: Stop Socket.io server
        run: pkill -f "tsx server.ts" || true
        
  build-and-push-docker:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/your-app-name:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
            NEXT_PUBLIC_SOCKET_URL=${{ env.NEXT_PUBLIC_SOCKET_URL }}
          
      - name: Save image name
        run: echo "IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/your-app-name:latest" >> $GITHUB_ENV

  deploy-to-render:
    name: Deploy to Render
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Deploy to Render
        uses: render-oss/deploy-render-action@v1.2.0
        with:
          render-token: ${{ secrets.RENDER_TOKEN }}
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          image-name: ${{ env.IMAGE_NAME }}
          environment-variables: |
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
            CLOUD_NAME=${{ secrets.CLOUD_NAME }}
            CLOUD_API_KEY=${{ secrets.CLOUD_API_KEY }}
            CLOUD_API_SECRET=${{ secrets.CLOUD_API_SECRET }}
            NODE_ENV=production
            PORT=3000
            SOCKET_PORT=3001
            NEXT_PUBLIC_SOCKET_URL=${{ env.NEXT_PUBLIC_SOCKET_URL }}